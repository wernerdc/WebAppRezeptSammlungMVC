// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAppRezeptSammlungMVC.Data;

#nullable disable

namespace WebAppRezeptSammlungMVC.Migrations
{
    [DbContext(typeof(WebAppRezeptSammlungMVCContext))]
    [Migration("20241111153712_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAppRezeptSammlungMVC.Models.Lebensmittel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bezeichnung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kategorie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Lebensmittel");
                });

            modelBuilder.Entity("WebAppRezeptSammlungMVC.Models.Rezept", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Beschreibung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bezeichnung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zubereitung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zubereitungszeit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rezept");
                });

            modelBuilder.Entity("WebAppRezeptSammlungMVC.Models.Zutat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Einheit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LebensmittelId")
                        .HasColumnType("int");

                    b.Property<int>("Menge")
                        .HasColumnType("int");

                    b.Property<int>("RezeptId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LebensmittelId");

                    b.HasIndex("RezeptId");

                    b.ToTable("Zutat");
                });

            modelBuilder.Entity("WebAppRezeptSammlungMVC.Models.Zutat", b =>
                {
                    b.HasOne("WebAppRezeptSammlungMVC.Models.Lebensmittel", "Lebensmittel")
                        .WithMany("Zutaten")
                        .HasForeignKey("LebensmittelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAppRezeptSammlungMVC.Models.Rezept", "Rezept")
                        .WithMany("Zutaten")
                        .HasForeignKey("RezeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lebensmittel");

                    b.Navigation("Rezept");
                });

            modelBuilder.Entity("WebAppRezeptSammlungMVC.Models.Lebensmittel", b =>
                {
                    b.Navigation("Zutaten");
                });

            modelBuilder.Entity("WebAppRezeptSammlungMVC.Models.Rezept", b =>
                {
                    b.Navigation("Zutaten");
                });
#pragma warning restore 612, 618
        }
    }
}
